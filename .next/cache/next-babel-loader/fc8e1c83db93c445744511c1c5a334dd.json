{"ast":null,"code":"import { useState, useEffect, useRef } from 'react';\nexport var useComponentVisible = function useComponentVisible(initialIsVisible) {\n  var _useState = useState(initialIsVisible),\n      isComponentVisible = _useState[0],\n      setIsComponentVisible = _useState[1];\n\n  var ref = useRef(null);\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsComponentVisible(false);\n    }\n  };\n\n  useEffect(function () {\n    document.addEventListener('click', handleClickOutside, true);\n    return function () {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  });\n  return {\n    ref: ref,\n    isComponentVisible: isComponentVisible,\n    setIsComponentVisible: setIsComponentVisible\n  };\n};","map":{"version":3,"sources":["/Users/estellegresillon/Code/eg-portfolio/src/hooks/useComponentVisible.js"],"names":["useState","useEffect","useRef","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,gBAAD,EAAsB;AAAA,kBACHJ,QAAQ,CAACI,gBAAD,CADL;AAAA,MAChDC,kBADgD;AAAA,MAC5BC,qBAD4B;;AAEvD,MAAMC,GAAG,GAAGL,MAAM,CAAC,IAAD,CAAlB;;AAEA,MAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,QAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDN,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,GAJD;;AAMAL,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,kBAAnC,EAAuD,IAAvD;AAEA,WAAO,YAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,kBAAtC,EAA0D,IAA1D;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,SAAO;AAAED,IAAAA,GAAG,EAAHA,GAAF;AAAOF,IAAAA,kBAAkB,EAAlBA,kBAAP;AAA2BC,IAAAA,qBAAqB,EAArBA;AAA3B,GAAP;AACD,CAnBM","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport const useComponentVisible = (initialIsVisible) => {\n  const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\n  const ref = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsComponentVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    \n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  });\n\n  return { ref, isComponentVisible, setIsComponentVisible };\n};\n"]},"metadata":{},"sourceType":"module"}